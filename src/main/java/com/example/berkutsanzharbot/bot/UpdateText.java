package com.example.berkutsanzharbot.bot;

import com.example.berkutsanzharbot.entity.User;
import com.example.berkutsanzharbot.repository.UserRepository;
import com.example.berkutsanzharbot.service.TelegramService;
import com.example.berkutsanzharbot.service.UserService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.client.okhttp.OkHttpTelegramClient;
import org.telegram.telegrambots.longpolling.util.LongPollingSingleThreadUpdateConsumer;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.generics.TelegramClient;


import java.util.Optional;

@Component
@RequiredArgsConstructor
public class UpdateText implements LongPollingSingleThreadUpdateConsumer {

    private final TelegramClient telegramClient = new OkHttpTelegramClient(
            "7651372603:AAHdclFmWSHgmIUMYLY5tjZ8kbtWgFEV7ec");
    private void sendMessageSafe(SendMessage sendMessage) {
        try {
            telegramClient.execute(sendMessage);
        } catch (Exception e) {
            e.printStackTrace();
            // –ú–æ–∂–Ω–æ —Å—é–¥–∞ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –¥—Ä—É–≥—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
        }
    }
    private final UserRepository userRepository;
    private final TelegramService telegramService;


    @Override
    public void consume(org.telegram.telegrambots.meta.api.objects.Update update) {
        String chatId = update.getMessage().getChatId().toString();
        String username = update.getMessage().getFrom().getUserName();
        String text = update.getMessage().getText();

        Optional<User> optionalUser = userRepository.findByChatId(chatId);

        if (optionalUser.isPresent()) {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç–∏–º —ç—Ö–æ
            User user = optionalUser.get();
            sendMessageSafe(new SendMessage(chatId, username + ", —è –ø–æ–ª—É—á–∏–ª –æ—Ç —Ç–µ–±—è —Å–æ–æ–±—â–µ–Ω–∏–µ:\n" + text));
        } else {
            if (text.contains("_")) {
                ResponseEntity<User> response = telegramService.saveChatId(chatId, text);
                if (response.getStatusCode().is2xxSuccessful()) {
                    sendMessageSafe(new SendMessage(chatId, "‚úÖ –¢–æ–∫–µ–Ω –ø—Ä–∏–≤—è–∑–∞–Ω. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –ø–∏—Å–∞—Ç—å!"));
                } else {
                    sendMessageSafe(new SendMessage(chatId, "‚ùå –¢–∞–∫–æ–π —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å."));
                }
            } else {

                sendMessageSafe(new SendMessage(chatId, "üí¨ –ß–∞—Ç –Ω–µ —Å–≤—è–∑–∞–Ω. –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω —Å –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–µ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: `Sanjar_abc123`"));
            }
        }
    }


}
